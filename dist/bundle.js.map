{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACNqD;AACF;AACvB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,MAAM,MAAM;AACpD;AACA,IAAI;AACJ,CAAC;AACD;AACA;AACA;AACA,CAAC","sources":["webpack://cv/./node_modules/bootstrap/dist/css/bootstrap-grid.min.css?06f8","webpack://cv/./node_modules/bootstrap/dist/css/bootstrap-reboot.min.css?c421","webpack://cv/./src/sass/index.sass?1f21","webpack://cv/webpack/bootstrap","webpack://cv/webpack/runtime/make namespace object","webpack://cv/./src/js/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import \"bootstrap/dist/css/bootstrap-reboot.min.css\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.min.css\";\r\nimport \"../sass/index.sass\";\r\n\r\nconst overlay = document.querySelector(\".overlay\");\r\nconst avatar = document.querySelector(\".avatar\");\r\n\r\nwindow.addEventListener(\"mousemove\", (e) => {\r\n  const x = Math.round(e.x / 100);\r\n  const y = Math.round(e.y / 100);\r\n\r\n  avatar.style.transform = `translate(${x - 5}px, ${Math.round(\r\n    y - 5\r\n  )}px) scale(1.1)`;\r\n});\r\n\r\nwindow.addEventListener(\"load\", function () {\r\n  overlay.style.display = \"none\";\r\n});\r\n"],"names":[],"sourceRoot":""}